name: Update

on:
  # schedule:
    # - cron: "0 0 * * *"
  workflow_dispatch:
  
defaults:
  run:
    shell: bash

jobs:
  update-release:
    runs-on: ubuntu-latest
    env:
      ORIG_AUTHOR: ${{ secrets.ORIG_AUTHOR }}
      ORIG_REPO_NAME: ${{ secrets.ORIG_REPO_NAME }}
      ORIG_REPO_YT_ID: ${{ secrets.ORIG_REPO_YT_ID }}
      ORIG_PATH_NAME: ${{ secrets.ORIG_PATH_NAME }}
      MOD_AUTHOR: ${{ github.repository_owner }}
      MOD_REPOSITORY: ${{ github.repository }}
    steps:
      - name: Cache APT Packages
        uses: actions/cache@v4
        with:
          path: /var/cache/apt/archives
          key: ubuntu-apt-${{ runner.os }}-${{ hashFiles('.github/workflows/*') }}
          restore-keys: ubuntu-apt-${{ runner.os }}-

      - name: Check & Install Missing Packages
        run: |
          sudo apt-get update -y
          sudo apt-get install -y --no-install-recommends curl zip unzip jq moreutils aria2
          
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Run Script
        run: |
          . env.sh
          chmod +x run.sh
          ./run.sh
      
      - name: Set Environment Variables
        run: |
          MOD_REPO_NAME=$(basename "${{ env.MOD_REPOSITORY }}")
          echo "MOD_REPO_YT_ID=$(echo ${MOD_REPO_NAME,,} | cut -d'-' -f1)-yt" >> $GITHUB_ENV
          echo "TAG_NAME=$(cat TAG)" >> $GITHUB_ENV

      - name: Verify ZIP Files
        run: |
          if ! find releases -type f -name "*.zip" -quit; then
            echo "No ZIP files found in the release folder."
            exit 1
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: "${{ env.TAG_NAME }}"
          body: "Automatically generated release."
          draft: false
          prerelease: false
          files: releases/*.zip
          
      - name: Commit and Push Changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git pull
          git add "${{ env.MOD_REPO_YT_ID }}" "TAG"
          git commit -m "Auto-update ${{ env.MOD_AUTHOR }} YouTube Lite Module"
          git push origin main
