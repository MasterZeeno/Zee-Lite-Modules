name: Test Update

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:
  
defaults:
  run:
    shell: bash

jobs:
  test-update-release:
    runs-on: ubuntu-latest
    env:
      ORIG_AUTHOR: ${{ secrets.ORIG_AUTHOR }}
      ORIG_REPO_NAME: ${{ secrets.ORIG_REPO_NAME }}
      ORIG_REPO_YT_ID: ${{ secrets.ORIG_REPO_YT_ID }}
      ORIG_PATH_NAME: ${{ secrets.ORIG_PATH_NAME }}
      MOD_AUTHOR: ${{ github.repository_owner }}
      MOD_REPOSITORY: ${{ github.repository }}
    steps:
      - name: Check & Install Missing Packages
        run: |
          sudo apt-get update -y
          sudo apt-get install -y --no-install-recommends curl zip unzip jq aria2
          
      - name: Test Checkout Repository
        uses: actions/checkout@v4
        
      - name: Test Run Script
        run: |
          . env.sh

          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "Running [${{ github.event_name }}]..."
            :>"$CURRENT_TAG_FILE"
          fi
          
          chmod +x run.sh
          ./run.sh

          if echo "$LATEST_TAG" > "$CURRENT_TAG_FILE"; then
            echo "Updated to the latest tag: [$LATEST_TAG]"
          fi
          
          echo "CURRENT_TAG_FILE=${CURRENT_TAG_FILE}" >> $GITHUB_ENV
          echo "LATEST_TAG=${LATEST_TAG}" >> $GITHUB_ENV
          echo "MOD_REPO_YT_ID=${MOD_REPO_YT_ID}" >> $GITHUB_ENV
          echo "MOD_DESC_YT=${MOD_DESC_YT}" >> $GITHUB_ENV

          if find "$RELEASES_DIR" -type f -name "*.zip" -quit; then
            echo "Uploading Release Module Zips..."
            echo "UPDATE_RELEASE=true" >> $GITHUB_ENV
          else
            echo "UPDATE_RELEASE=false" >> $GITHUB_ENV
          fi
          
      - name: Create GitHub Release
        if: ${{ env.UPDATE_RELEASE == 'true' }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.LATEST_TAG }}
          name: "${{ env.LATEST_TAG }}"
          body: "Automatically generated release."
          draft: false
          prerelease: false
          files: releases/*.zip
          
      - name: Commit and Push Changes
        if: ${{ env.UPDATE_RELEASE == 'true' }}
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git add "${{ env.MOD_REPO_YT_ID }}" "${{ env.CURRENT_TAG_FILE }}"
          git commit -m "Auto-update ${{ env.MOD_DESC_YT }}"
          git push --force-with-lease
      
